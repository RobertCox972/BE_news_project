{
	"GET /api": {
		"description": "serves up a json representation of all the available endpoints of the api"
	},
	"GET /api/topics": {
		"description": "serves an array of all topics",
		"queries": [],
		"exampleResponse": {
			"topics": [{ "slug": "football", "description": "Footie!" }]
		}
	},
	"GET /api/articles": {
		"description": "serves an array of all topics",
		"queries": ["author", "topic", "sort_by", "order"],
		"exampleResponse": {
			"articles": [
				{
					"title": "Seafood substitutions are increasing",
					"topic": "cooking",
					"author": "weegembump",
					"body": "Text from the article..",
					"created_at": 1527695953341
				}
			]
		}
	},

	"GET /api/articles/:article_id": {
		"description": "serves an article object",
		"queries": [],
		"exampleResponse": {
			"article": {
				"author": "jessjelly",
				"title": "Running a Node App",
				"article_id": 1,
				"topic": "coding",
				"created_at": "2016-08-18T12:07:52.389Z",
				"votes": 24,
				"body": "The text of the body...",
				"comment_count": "8"
			}
		}
	},

	"GET /api/articles/:article_id/comments": {
		"description": "serves an array of comments for the specified article",
		"queries": ["sort_by", "order"],
		"exampleResponse": {
			"comments": [
				{
					"comment_id": 44,
					"votes": 4,
					"created_at": "2017-11-20T08:58:48.322Z",
					"author": "grumpy19",
					"body": "Error est qui id corrupti et quod enim accusantium minus. Deleniti quae ea magni officiis et qui suscipit non."
				}
			]
		}
	},
	"POST /api/articles/:article_id/comments": {
		"description": "inserts a new comment and responds with that comment",
		"queries": [],
		"post body": {
			"username": "jessjelly",
			"body": "example"
		},
		"exampleResponse": {
			"comment": {
				"comment_id": 301,
				"author": "jessjelly",
				"article_id": 1,
				"votes": 0,
				"created_at": "2019-05-11T22:27:32.949Z",
				"body": "example"
			}
		}
	},

	"DELETE /api/comments/comment_id": {
		"description": "deletes a comment and responds with just a 204 status",
		"queries": [],
		"exampleResponse": {}
	},
	"PATCH /api/articles/:article_id": {
		"description": "accepts an object in the form { inc_votes: newVote } and updates the article's votes property. Responds with the updated article",
		"queries": [],
		"patch body": { "inc_votes": "newVote (num)" },
		"exampleResponse": {
			"article": {
				"author": "jessjelly",
				"title": "Running a Node App",
				"article_id": 1,
				"topic": "coding",
				"created_at": "2016-08-18T12:07:52.389Z",
				"votes": 25,
				"body": "The text of the body...",
				"comment_count": "8"
			}
		}
	},
	"GET /api/users/:username": {
		"description": "responds with an object of the given user",
		"queries": [],
		"exampleResponse": {
			"user": {
				"username": "AwkwardRob",
				"avatar_url": "https://example.com/img",
				"name": "Robert Cox"
			}
		}
	},
	"PATCH /api/articles/article_id": {
		"description": "accepts an object in the form `{ inc_votes: newVote }`, will indicate how much the `votes` property in the database should be updated by Responds with the updated vote",
		"queries": [],
		"patch body": {
			"inc_votes": "newVote (num)"
		},
		"exampleResponse": {
			"comment_id": 11,
			"body": "Ambidextrous marsupial",
			"article_id": 3,
			"author": "icellusedkars",
			"votes": 0,
			"created_at": "2020-09-19T23:10:00.000Z"
		}
	}
}
